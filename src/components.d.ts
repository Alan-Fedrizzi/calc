/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { EnumButtonColor, EnumButtonType } from "./utils/utils";
export { EnumButtonColor, EnumButtonType } from "./utils/utils";
export namespace Components {
    interface CalcButton {
        "buttonColor"?: EnumButtonColor;
        "buttonType": EnumButtonType;
    }
    interface CalcComponent {
    }
    interface CalcContainer {
    }
    interface CalcDisplay {
        "calcData": string;
        "calcInput": string;
    }
}
export interface CalcButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLCalcButtonElement;
}
declare global {
    interface HTMLCalcButtonElement extends Components.CalcButton, HTMLStencilElement {
    }
    var HTMLCalcButtonElement: {
        prototype: HTMLCalcButtonElement;
        new (): HTMLCalcButtonElement;
    };
    interface HTMLCalcComponentElement extends Components.CalcComponent, HTMLStencilElement {
    }
    var HTMLCalcComponentElement: {
        prototype: HTMLCalcComponentElement;
        new (): HTMLCalcComponentElement;
    };
    interface HTMLCalcContainerElement extends Components.CalcContainer, HTMLStencilElement {
    }
    var HTMLCalcContainerElement: {
        prototype: HTMLCalcContainerElement;
        new (): HTMLCalcContainerElement;
    };
    interface HTMLCalcDisplayElement extends Components.CalcDisplay, HTMLStencilElement {
    }
    var HTMLCalcDisplayElement: {
        prototype: HTMLCalcDisplayElement;
        new (): HTMLCalcDisplayElement;
    };
    interface HTMLElementTagNameMap {
        "calc-button": HTMLCalcButtonElement;
        "calc-component": HTMLCalcComponentElement;
        "calc-container": HTMLCalcContainerElement;
        "calc-display": HTMLCalcDisplayElement;
    }
}
declare namespace LocalJSX {
    interface CalcButton {
        "buttonColor"?: EnumButtonColor;
        "buttonType"?: EnumButtonType;
        "onButtonClick"?: (event: CalcButtonCustomEvent<string>) => void;
    }
    interface CalcComponent {
    }
    interface CalcContainer {
    }
    interface CalcDisplay {
        "calcData"?: string;
        "calcInput"?: string;
    }
    interface IntrinsicElements {
        "calc-button": CalcButton;
        "calc-component": CalcComponent;
        "calc-container": CalcContainer;
        "calc-display": CalcDisplay;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "calc-button": LocalJSX.CalcButton & JSXBase.HTMLAttributes<HTMLCalcButtonElement>;
            "calc-component": LocalJSX.CalcComponent & JSXBase.HTMLAttributes<HTMLCalcComponentElement>;
            "calc-container": LocalJSX.CalcContainer & JSXBase.HTMLAttributes<HTMLCalcContainerElement>;
            "calc-display": LocalJSX.CalcDisplay & JSXBase.HTMLAttributes<HTMLCalcDisplayElement>;
        }
    }
}
